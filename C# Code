using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Policy;
using System.Text;
using System.Threading.Tasks;

namespace businessCalculator
{
    internal class Program
    {
        static void Main(string[] args)
        {
            bool menugo = true;
            ConsoleKeyInfo cki;
            Console.CursorVisible = false;
            double cac = 0;
            int bankaccount = 1000;
            double growth = 1;
            double margain = 0;
            int period = 0;
            double advspent = 0;
            int saleamount = 0;
            double cost = 0;
            double retail = 0;
            Random random = new Random();
            Console.Write("Enter the period of time (months): ");
            period = Convert.ToInt32(Console.ReadLine());
            double[] growthpermon = new double[period];
            double[] profitpermon = new double[period];
            int[] salespermon = new int[period];
            double[] retailpermon = new double[period];
            double[] cacpermon = new double[period];
            double[] advpermon = new double[period];
            int growthtrend = 0;
            Console.Write("Enter your advertisement cost per month: ");
            advspent = Convert.ToDouble(Console.ReadLine());
            Console.Write("Enter your cost: ");
            cost = Convert.ToDouble(Console.ReadLine());
            Console.Write("Enter your retail price: ");
            retail = Convert.ToDouble(Console.ReadLine());
            margain = retail / cost;
            saleamount = (int)(200 / margain);
            int month = 0;
            cac = advspent / saleamount;
            while (menugo)
            {
                retailpermon[month] = retail;
                margain = retail / cost;
                cac = advspent / saleamount;
                cacpermon[month] = cac;
                salespermon[month] = saleamount;
                advpermon[month] = advspent;
                profitpermon[month] = ((retail - cost) * saleamount) - advspent;
                bankaccount += (int)(profitpermon[month]);
                //Calculate next months sales
                int randomfactor = saleamount / 5;
                int extremefactor = random.Next(0, 10);
                int loopturn = 1;
                if (extremefactor == 0)
                    loopturn = random.Next(2, 6);
                float advspentrate = 1;
                float retailchangerate = 1;
                if (month > 0)
                {
                    advspentrate = (float)(advspent / (margain * 100)); 
                    retailchangerate = (float)margain;
                }
                if (growth > 0)
                {
                    growthtrend = (int)(saleamount * growth * 0.45 / (100 * retailchangerate));
                }
                else
                {
                    growthtrend = (int)(saleamount * growth * retailchangerate / 100); 
                }
                for (int i = 0; i < loopturn; i++)
                {
                    saleamount += random.Next(-randomfactor, +randomfactor);
                }
                saleamount += growthtrend;
                saleamount += (int)(advspent / (margain * 100));
                if (margain > 4)
                {
                    saleamount *=(int) 0.5;
                }
                if (margain > 6)
                {
                    saleamount *= (int)0.5;
                }
                if (margain > 10)
                {
                    saleamount *= (int)0.5;
                }
                if (margain > 15)
                {
                    saleamount *= (int)0.5;
                }
                if (margain > 25)
                {
                    saleamount *= (int)0.5;
                }
                if (margain > 40)
                    saleamount = 0;
                if (saleamount < 0)
                    saleamount = 0;
                //to here
                growthpermon[month] = 100 * (saleamount - salespermon[month]) / salespermon[month];
                growth = growthpermon[month];
                month++;
                Console.Clear();
                Console.SetCursorPosition(5, 2);
                Console.WriteLine("Month " + month + "/" + period + " analysis:");
                Console.SetCursorPosition(5, 4);
                Console.Write("Sales this month: " + saleamount);
                Console.SetCursorPosition(50, 6);
                Console.WriteLine("Cost: " + cost);
                Console.SetCursorPosition(50, 8);
                Console.WriteLine("Retail: " + retail);
                Console.SetCursorPosition(50, 10);
                Console.WriteLine("CAC: " + cac);
                Console.SetCursorPosition(50, 12);
                Console.WriteLine("Advertisement: " + advspent);
                Console.ForegroundColor = ConsoleColor.Green;
                if (growthpermon[month-1] < 0)
                    Console.ForegroundColor= ConsoleColor.Red;
                Console.SetCursorPosition(40, 4);
                Console.WriteLine("%" + growth);
                Console.ForegroundColor = ConsoleColor.White;
                Console.SetCursorPosition(50, 2);
                Console.WriteLine("Capital: " + bankaccount);
                bool langmenu = true;
                int chose = 1;
                bool change = true;
                while (langmenu)
                {
                    Console.SetCursorPosition(5, 6);
                    Console.BackgroundColor = ConsoleColor.Black;
                    Console.ForegroundColor = ConsoleColor.White;
                    Console.WriteLine("Change prices?");
                    if (chose == 1)
                    {
                        Console.BackgroundColor = ConsoleColor.White;
                        Console.ForegroundColor = ConsoleColor.Green;
                        Console.SetCursorPosition(7, 9);
                        Console.WriteLine(" CHANGE ");
                        Console.SetCursorPosition(3, 8);
                        Console.WriteLine("               ");
                        Console.SetCursorPosition(3, 10);
                        Console.WriteLine("               ");
                        Console.SetCursorPosition(3, 9);
                        Console.WriteLine("    ");
                        Console.SetCursorPosition(14, 9);
                        Console.WriteLine("    ");
                        Console.BackgroundColor = ConsoleColor.Black;
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.SetCursorPosition(22, 9);
                        Console.WriteLine("NOCHANGE");
                        Console.SetCursorPosition(18, 8);
                        Console.WriteLine("                ");
                        Console.SetCursorPosition(18, 10);
                        Console.WriteLine("                ");
                        Console.SetCursorPosition(18, 9);
                        Console.WriteLine("    ");
                        Console.SetCursorPosition(30, 9);
                        Console.WriteLine("    ");
                    }
                    else
                    {
                        Console.BackgroundColor = ConsoleColor.Black;
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.SetCursorPosition(7, 9);
                        Console.WriteLine(" CHANGE ");
                        Console.SetCursorPosition(3, 8);
                        Console.WriteLine("               ");
                        Console.SetCursorPosition(3, 10);
                        Console.WriteLine("               ");
                        Console.SetCursorPosition(3, 9);
                        Console.WriteLine("    ");
                        Console.SetCursorPosition(14, 9);
                        Console.WriteLine("    ");
                        Console.BackgroundColor = ConsoleColor.White;
                        Console.ForegroundColor = ConsoleColor.Green;
                        Console.SetCursorPosition(22, 9);
                        Console.WriteLine("NOCHANGE");
                        Console.SetCursorPosition(18, 8);
                        Console.WriteLine("               ");
                        Console.SetCursorPosition(18, 10);
                        Console.WriteLine("               ");
                        Console.SetCursorPosition(18, 9);
                        Console.WriteLine("    ");
                        Console.SetCursorPosition(30, 9);
                        Console.WriteLine("   ");
                    }
                    if (Console.KeyAvailable)
                    {
                        cki = Console.ReadKey(true);
                        if (cki.Key == ConsoleKey.RightArrow && chose != 2)
                            chose = 2;
                        else if (cki.Key == ConsoleKey.LeftArrow && chose != 1)
                            chose = 1;
                        else if (cki.Key == ConsoleKey.Enter)
                        {
                            langmenu = false;
                            if (chose == 1)
                                change = true;
                            else
                                change = false;
                        }
                    }
                }
                Console.BackgroundColor= ConsoleColor.Black;
                Console.ForegroundColor= ConsoleColor.White;
                if (change)
                {
                    Console.SetCursorPosition(5, 12);
                    Console.Write("New retail price: ");
                    Console.SetCursorPosition(5, 13);
                    Console.WriteLine("New advertisement budget: ");
                    Console.SetCursorPosition(23, 12);
                    retail = Convert.ToDouble(Console.ReadLine());
                    Console.SetCursorPosition(31, 13);
                    advspent = Convert.ToDouble(Console.ReadLine());
                }
                if (period - month > 2)
                {
                    int extremeevent = random.Next(0, 25);
                    if (extremeevent == 24)
                    {
                        Console.Clear();
                        Console.SetCursorPosition(5, 2);
                        Console.WriteLine("You found a cheaper manufacturer! Your cost will be %20 less");
                        cost = cost * 0.8;
                        Console.ReadLine();
                    }
                    else if (extremeevent == 23)
                    {
                        Console.Clear();
                        Console.SetCursorPosition(5, 2);
                        Console.WriteLine("Your distrubuter quit! Your cost will increase %50");
                        cost = cost * 1.5;
                        Console.ReadLine();
                    }
                }
                if (month == period)
                    menugo = false;
                if (bankaccount < -100000 || saleamount <= 0)
                {
                    Console.Clear();
                    Console.SetCursorPosition(5, 2);
                    Console.WriteLine("You are bankrupt!");
                    menugo = false;
                }
            }
            Console.Clear();
            bool exit = false;
            int monthcam = 1;
            int monthstart = 1;
            while (!exit)
            {
                Console.SetCursorPosition(2, 2);
                Console.WriteLine("Month");
                Console.SetCursorPosition(10, 2);
                Console.WriteLine("Growth");
                Console.SetCursorPosition(19, 2);
                Console.WriteLine("Sales");
                Console.SetCursorPosition(26, 2);
                Console.WriteLine("Profit");
                Console.SetCursorPosition(37, 2);
                Console.WriteLine("CAC");
                int a = 0;
                for (int i = monthcam-1; i < monthcam+11; i++)
                {
                    if (i + 1 == monthstart)
                    {
                        Console.BackgroundColor = ConsoleColor.White;
                        Console.ForegroundColor = ConsoleColor.Green;
                    }
                    Console.SetCursorPosition(4, 4 + (a * 2));
                    Console.WriteLine(i + 1);
                    Console.BackgroundColor = ConsoleColor.Black;
                    Console.ForegroundColor = ConsoleColor.Red;
                    if (growthpermon[i] > 0)
                        Console.ForegroundColor = ConsoleColor.Green;
                    Console.SetCursorPosition(13, 4 + (a * 2));
                    Console.WriteLine(growthpermon[i] + "%");
                    Console.ForegroundColor = ConsoleColor.White;
                    Console.SetCursorPosition(21, 4 + (a * 2));
                    Console.WriteLine(salespermon[i]);
                    Console.SetCursorPosition(29, 4 + (a * 2));
                    Console.WriteLine(profitpermon[i]);
                    Console.SetCursorPosition(38, 4 + (a * 2));
                    Console.WriteLine(cacpermon[i]);
                    a++;
                }
                Console.SetCursorPosition(2, 28);
                int growthchange = ((salespermon[period - 1] * 100 / salespermon[0]) - 100);
                Console.Write("Total growth: ");
                Console.ForegroundColor = ConsoleColor.Red;
                if (growthchange > 0)
                    Console.ForegroundColor = ConsoleColor.Green;
                Console.Write(growthchange + "%");
                Console.ForegroundColor = ConsoleColor.White;
                Console.SetCursorPosition(30, 28);
                Console.WriteLine("Total profits: " + (bankaccount - 1000));
                if (Console.KeyAvailable)
                {
                    Console.Clear();
                    cki = Console.ReadKey(true);
                    if (cki.Key == ConsoleKey.UpArrow)
                    {
                        monthcam--;
                    }
                    else if (cki.Key == ConsoleKey.DownArrow)
                    {
                        monthcam++;
                    }
                    else if (cki.Key == ConsoleKey.Escape)
                    {
                        exit = true;
                    }
                    if (cki.Key == ConsoleKey.UpArrow && monthstart != 1)
                    {
                        monthstart--;
                    }
                    else if (cki.Key == ConsoleKey.DownArrow && monthstart != month)
                    {
                        monthstart++;
                    }
                }
                if (monthcam == 0)
                    monthcam = 1;
                else if (monthcam == month)
                    monthcam = month - 1;
            }
        }
    }
    
}
